services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: spotify-search
    container_name: spotify-search-main-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    networks:
      - spotify-search
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: spotify-search-main-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - spotify-search
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: spotify-search-main-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-spotify_search}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-spotify_user}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - spotify-search
    ports:
      - "3306:3306"

  # Redis Service
  redis:
    image: redis:alpine
    container_name: spotify-search-main-redis
    restart: unless-stopped
    networks:
      - spotify-search
    ports:
      - "6379:6379"

  # Queue Worker Service
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spotify-search-main-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    command: php artisan queue:work --tries=3 --timeout=90
    networks:
      - spotify-search
    depends_on:
      - app
      - redis

networks:
  spotify-search:
    driver: bridge

volumes:
  dbdata:
    driver: local 