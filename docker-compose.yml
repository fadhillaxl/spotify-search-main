version: '2.4'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: spotify-search
    container_name: spotify-search-main-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - vendor:/var/www/vendor
    networks:
      - spotify-search
    depends_on:
      - db
      - redis

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: spotify-search-main-nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - vendor:/var/www/vendor
    networks:
      - spotify-search
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: spotify-search-main-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: spotify_search
      MYSQL_ROOT_PASSWORD: password
      MYSQL_PASSWORD: password
      MYSQL_USER: spotify_user
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - spotify-search

  # Redis Service
  redis:
    image: redis:alpine
    container_name: spotify-search-main-redis
    restart: unless-stopped
    networks:
      - spotify-search
    ports:
      - "6380:6379"

  # Queue Worker Service
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spotify-search-main-queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - vendor:/var/www/vendor
    command: php artisan queue:work --tries=3 --timeout=90
    networks:
      - spotify-search
    depends_on:
      - app
      - redis

networks:
  spotify-search:
    driver: bridge

volumes:
  dbdata:
    driver: local
  vendor:
    driver: local 